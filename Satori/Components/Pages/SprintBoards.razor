@page "/SprintBoards"
@using Satori.AppServices.Services
@using Satori.AppServices.ViewModels.Sprints
@using Satori.AppServices.ViewModels.WorkItems
@using System.Web
@attribute [StreamRendering]


<PageTitle>Sprint Boards</PageTitle>

<h3>Sprint Boards</h3>

@if (_sprints == null)
{
    <p><em>Loading Sprints...</em></p>
}
else
{
    <div class="avatar-row">
        @foreach (var sprint in _sprints.OrderBy(x => x.TeamName))
        {
            <div class="avatar-cell">
                <img src="@sprint.TeamAvatarUrl" width="24" height="24" 
                     alt="@sprint.TeamName"
                     title="@sprint.TeamName @HttpUtility.HtmlEncode("\r") @sprint.Name @HttpUtility.HtmlEncode("\r") Finishes: @sprint.FinishTime.ToString("yyyy-MM-dd")" />
            </div>
        }
    </div>

    if (_workItems == null)
    {
        <p><em>Loading Work Items...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
            <th>Board</th>
                <th>Work Item</th>
                <th>Title</th>
                <th>Tasks</th>
            </thead>
            <tbody>
                @foreach (var workItem in _workItems.OrderBy(wi => wi.AbsolutePriority))
                {
                    <tr class="work-item-row @workItem.Type.CssClass">
                        <td>
                            <div style="display: flex;">
                                <div class="sprint-priority">
                                    @workItem.SprintPriority
                                </div>
                                @if (@workItem.Sprint != null)
                                {
                                    <div class="avatar-cell">
                                        <img src="@workItem.Sprint.TeamAvatarUrl" width="24" height="24"
                                             alt="@workItem.Sprint.TeamName"/>
                                    </div>
                                }
                                @if (@workItem.AssignedTo != null)
                                {
                                    <div class="avatar-cell">
                                        <img src="@workItem.AssignedTo.AvatarUrl" width="24" height="24"
                                             alt="@workItem.AssignedTo.DisplayName" />
                                    </div>
                                }

                            </div>
                        </td>
                        <td>
                            <a href="@workItem.Url">@workItem.Id</a>
                        </td>
                        <td>
                            <a href="@workItem.Url">@workItem.Title</a>
                        </td>
                        <td>
                            @foreach (var @task in workItem.Children)
                            {
                                <div style="display: flex;">
                                    @if (@task.AssignedTo != null)
                                    {
                                        <div class="avatar-cell">
                                            <img src="@task.AssignedTo.AvatarUrl" width="24" height="24"
                                                 alt="@task.AssignedTo.DisplayName"
                                                 title="@task.AssignedTo.DisplayName" />
                                        </div>
                                    }
                                    <div>
                                        <a href="@task.Url">@task.Title</a>
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}


@code {
    private Sprint[]? _sprints;
    private WorkItem[]? _workItems;

    protected override async Task OnInitializedAsync()
    {
         var srv = Program.Services.GetRequiredService<SprintBoardService>();
         _sprints = (await srv.GetActiveSprintsAsync()).ToArray();
         _workItems = (await srv.GetWorkItemsAsync(_sprints)).ToArray();
    }
}
