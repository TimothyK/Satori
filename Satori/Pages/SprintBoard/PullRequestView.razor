@using Satori.AppServices.ViewModels.PullRequests
@inject IJSRuntime JsRuntime

<div class="work-item work-item-pr cell-link @(PullRequest.Status == Status.Complete ? "status-done" : "")"
     @onclick="() => OpenPullRequestAsync(PullRequest)" title="Open PR#@PullRequest.Id"
     >
    <div class="avatar-cell">
        <img src="@PullRequest.CreatedBy.AvatarUrl"
             alt="@PullRequest.CreatedBy.DisplayName"
             title="@PullRequest.CreatedBy.DisplayName" />
    </div>
    <span class="pull-request-id">
        @PullRequest.Id
    </span>
    <div class="pull-request-description">
        <div class="pull-request-repository">
            <span class="pull-request-projectname">@PullRequest.Project</span>
            <span class="pull-request-repositoryname">@PullRequest.RepositoryName</span>
            @foreach (var tag in PullRequest.VersionTags)
            {
                <span class="badge bg-success git-tag">@tag</span>
            }
        </div>
        <div class="pull-request-title">@PullRequest.Title</div>
    </div>
    <div class="avatar-row">
        @if (@PullRequest.Status == Status.Draft)
        {
            <div>
                <span class="badge bg-warning bg-draft">Draft</span>
            </div>
        }
        @foreach (var review in @PullRequest.Reviews.OrderByDescending(r => r.IsRequired))
        {
            <div class="avatar-cell @(review.IsRequired ? "" : "review-optional")">
                <img src="@review.Reviewer.AvatarUrl"
                     alt="@(review.IsRequired ? "" : "Optional:") @review.Reviewer.DisplayName"
                     title="@(review.IsRequired ? "" : "Optional:") @review.Reviewer.DisplayName"/>
                @if (review.Vote >= ReviewVote.ApprovedWithSuggestions)
                {
                    <span class="vote vote-approved"></span>
                }
                @if (review.Vote is ReviewVote.WaitingForAuthor)
                {
                    <span class="vote vote-wait"></span>
                }
                @if (review.Vote == ReviewVote.Rejected)
                {
                    <span class="vote vote-rejected"></span>
                }
            </div>
        }
    </div>
</div>
