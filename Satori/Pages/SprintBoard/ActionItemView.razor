@using Satori.AppServices.Services
@using Satori.AppServices.ViewModels
@using Satori.AppServices.ViewModels.PullRequests.ActionItems
@using Satori.AppServices.ViewModels.WorkItems.ActionItems
@using Satori.Kimai

@inject WorkItemUpdateService WorkItemUpdateService
@inject IJSRuntime JsRuntime
@inject IKimaiServer KimaiServer

<div class="flex-row">
    @foreach (var personPriority in ActionItem.On)
    {
        <div class="priority-block @(personPriority.Person == Person.Me ? "highlight" : "")">
            <div class="avatar-cell">
                <img src="@personPriority.Person.AvatarUrl"
                     alt="@personPriority.Person.DisplayName"
                     title="@personPriority.Person.DisplayName" />
            </div>
            <div class="priority-number">@personPriority.Priority</div>
        </div>
    }
    
    <div class="action-description-row">

        <div class="action-description">@ActionItem.ActionDescription</div>

        @if (IsRunning)
        {
            <div class="running-work-item">
                <img src="images/Running.png" alt="work item is actively being timed" />
            </div>
        }

        @* Menu *@

        <button class="hamburger-btn @(IsRunning ? "hidden" : "")" title="More actions"
                @onclick="ShowMenu"
                @onmouseleave="OnButtonMouseLeaveAsync">
            <span></span>
            <span></span>
            <span></span>
        </button>
        @if (_isMenuOpen)
        {
            <div class="context-menu"
                 @onmouseenter="OnMenuMouseEnter"
                 @onmouseleave="OnMenuMouseLeaveAsync">

                @* Open *@
                <div class="context-menu-item"
                     @onclick="OnOpenClickAsync">
                    <div class="flex-menu">
                        <div>Open</div>
                        @if (WorkItem != null)
                        {
                            <div class="work-item @WorkItem.Type.CssClass">
                                <div class="avatar-cell">
                                    <img src="@WorkItem.AssignedTo.AvatarUrl"
                                         alt="@WorkItem.AssignedTo.DisplayName"
                                         title="@WorkItem.AssignedTo.DisplayName"/>
                                </div>
                                <div>@WorkItem.Title</div>
                            </div>
                        }
                        @if (ActionItem is PullRequestActionItem openPrAction)
                        {
                            <div class="work-item work-item-pr">
                                <div class="avatar-cell">
                                    <img src="@openPrAction.PullRequest.CreatedBy.AvatarUrl"
                                         alt="@openPrAction.PullRequest.CreatedBy.DisplayName"
                                         title="@openPrAction.PullRequest.CreatedBy.DisplayName"/>
                                </div>
                                <div class="pull-request-id">@openPrAction.PullRequest.Id</div>
                                <div>@openPrAction.PullRequest.Title</div>
                            </div>
                        }
                        <div>...</div>
                    </div>
                </div>


                @* Fund *@
                @if (KimaiServer.Enabled && WorkItem != null)
                {
                    <div class="context-menu-item"@onclick="OpenFundDialog">
                        @if (WorkItem.KimaiProject == null)
                        {
                            <div>Fund...</div>
                        }
                        else
                        {
                            <div>Change funding from
                                <span class="avatar-cell customer-logo">
                                    <img src="@WorkItem.KimaiProject.Customer.Logo" alt="@WorkItem.KimaiProject.Customer.Name"/>
                                </span>
                                <span class="project-code">@WorkItem.KimaiProject.ProjectCode@(WorkItem.KimaiActivity != null ? "." + WorkItem.KimaiActivity.ActivityCode : "")</span>...
                            </div>
                        }
                    </div>
                }

                @* Waits For *@
                @if (HasWaitsForMenu)
                {
                    <div class="context-menu-item submenu-parent"
                         @onmouseenter="OnWaitsForMouseEnter"
                         @onmouseleave="OnWaitsForMouseLeaveAsync">
                        <div class="flex-menu">
                            <div>Waits For</div>
                            <div class="flex-center-whitespace"></div>
                            <div>►</div>
                        </div>
                        @if (_isWaitsForSubMenuOpen)
                        {
                            <div class="submenu"
                                 @onmouseenter="OnWaitsForWorkItemMouseEnter"
                                 @onmouseleave="OnWaitsForWorkItemMouseLeaveAsync">
                                @foreach (var sibling in WaitsForSiblings())
                                {

                                    <div class="flex-menu work-item @sibling.Type.CssClass">
                                        <div class="avatar-cell">
                                            <img src="@sibling.AssignedTo.AvatarUrl"
                                                 alt="@sibling.AssignedTo.DisplayName"
                                                 title="@sibling.AssignedTo.DisplayName"/>
                                        </div>
                                        <div class="context-menu-item" @onclick="async () => await OnCreatePredecessorLinkClickAsync(sibling)">@sibling.Title</div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                }

            </div>
        }
    </div>
    @if (ActionItem is TaskActionItem taskAction)
    {
        <div class="work-item cell-link @taskAction.WorkItem.Type.CssClass" @onclick="() => OpenWorkItemAsync(taskAction.WorkItem)" title="Open D#@(taskAction.WorkItem.Id)">
            <div>@taskAction.WorkItem.Title</div>
        </div>
    }
    @if (ActionItem is PullRequestActionItem prAction)
    {
        <div class="work-item cell-link work-item-pr" @onclick="() => OpenPullRequestAsync(prAction.PullRequest)" title="Open PR#@(prAction.PullRequest.Id)">
            <div class="pull-request-id">@prAction.PullRequest.Id</div>
            <div>@prAction.PullRequest.Title</div>
        </div>
    }
</div>

@if (WorkItem != null)
{
    <SelectProjectDialog @ref="_fundDialog" Save="OnFundDialogSaveAsync" />
}

