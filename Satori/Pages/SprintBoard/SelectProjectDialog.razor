@using Satori.AppServices.ViewModels.WorkItems
@using Satori.Kimai
@using MudBlazor
@using Satori.Kimai.ViewModels

@inject IJSRuntime JsRuntime
@inject IKimaiServer KimaiServer

@if (!IsOpen)
{
    return;
}

<div class="dialog-backdrop">
    <div class="dialog">
        <div class="dialog-title">
            <span class="dialog-close" @onclick="Cancel">&times;</span>
            Select Project
        </div>
        <div class="dialog-body">
            @if (WorkItem != null)
            {
                <div class="flex-row work-item-header">
                    <div>
                        Add funding to:
                    </div>
                    @if (WorkItem.Type == WorkItemType.Task && WorkItem.Parent != null)
                    {
                        <span class="work-item @WorkItem.Parent.Type.CssClass cell-link" @onclick="() => OpenWorkItemAsync(WorkItem.Parent)" title="Open D#@WorkItem.Parent.Id">
                            <span class="work-item-id">@WorkItem.Parent.Id</span>
                            <span class="work-item-title">@WorkItem.Parent.Title</span>
                        </span>
                    }
                    <div></div>

                    <span class="work-item @WorkItem.Type.CssClass cell-link" @onclick="() => OpenWorkItemAsync(WorkItem)" title="Open D#@WorkItem.Id">
                        @if (WorkItem.Parent == null || WorkItem.Type != WorkItemType.Task)
                        {
                            <label><span class="work-item-id">@WorkItem.Id</span>&nbsp;</label>
                        }
                        <span class="work-item-title">@WorkItem.Title</span>

                    </span>
                </div>
            }

            <div>
                <MudAutocomplete T="Customer" 
                                 Label="Customer" 
                                 Value="@_selectedCustomer"
                                 ValueChanged="(Customer customer) => OnCustomerChanged(customer)"
                                 SearchFunc="SearchCustomerAsync"
                                 Placeholder="Select Customer"
                                 Dense="true"
                                 Clearable="true"
                                 Variant="Variant.Outlined"
                                 MaxItems="int.MaxValue">
                    <ItemTemplate Context="customer">
                        <div class="flex-row">
                            @if (customer.Logo != null)
                            {
                                <div class="avatar-cell">
                                    <img src="@customer.Logo" alt="@customer.Name Logo"/>
                                </div>
                            }
                            <div>@customer.Name</div>
                        </div>
                    </ItemTemplate>
                </MudAutocomplete>
            </div>
            <div>
                <MudAutocomplete Label="Project" 
                                 Value="@_selectedProject"
                                 ValueChanged="(Project? project) => OnProjectChanged(project)"
                                 SearchFunc="SearchProjectAsync"
                                 Placeholder="Select Project"
                                 Dense="true"
                                 Clearable="true"
                                 Variant="Variant.Outlined"
                                 MaxItems="int.MaxValue">
                </MudAutocomplete>
            </div>
            <div>
                <MudAutocomplete Label="Activity"
                                 Value="@_selectedActivity"
                                 ValueChanged="(Activity? activity) => OnActivityChanged(activity)"
                                 SearchFunc="SearchActivityAsync"
                                 Placeholder="Select Activity"
                                 Dense="true"
                                 Clearable="true"
                                 Disabled="_selectedProject == null"
                                 Variant="Variant.Outlined"
                                 MaxItems="int.MaxValue">
                </MudAutocomplete>
            </div>

        </div>
        <div class="dialog-buttonbar">
            <button class="btn btn-outline-primary"
                    @onclick="OkAsync"
                    disabled="@(RequireActivity && _selectedActivity == null)"
            >
                OK
            </button>
            <button class="btn btn-outline-secondary" @onclick="Cancel">Cancel</button>
        </div>
    </div>
</div>


