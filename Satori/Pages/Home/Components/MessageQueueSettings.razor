@using Satori.AppServices.Models
@using ConnectionSettings = Satori.MessageQueues.ConnectionSettings
@inject IConnectionSettingsStore ConnectionSettingsStore

<div id="edit-messageQueue" class="integration-region @IsVisibleClass">
    <h4>Azure Service Bus Configuration</h4>
    <div>
        <div class="integration-form">
            <table>
                <tr>
                    <td />
                    <td>
                        <input type="checkbox" id="mq-enabled" @bind="Enabled" @onblur="Validate" />
                        <label for="mq-enabled">Enabled</label>
                    </td>
                </tr>
                <tr>
                    <td><label for="mq-subdomain">Subdomain (Namespace):</label></td>
                    <td>
                        <div class="input-group">
                            <span class="input-group-text">https://</span>
                            <input type="text" id="mq-subdomain" placeholder="@ConnectionSettings.Default.Subdomain" size="50" @bind="Subdomain" @onblur="Validate"/>
                            <span class="input-group-text">.servicebus.windows.net/</span>
                        </div>
                    </td>
                    <td><span class="validation-error">@SubdomainValidationErrorMessage</span></td>
                </tr>
                <tr>
                    <td><label for="mq-queuename">Queue Name:</label></td>
                    <td><input type="text" id="mq-queuename" placeholder="@ConnectionSettings.Default.QueueName" size="50" @bind="QueueName" @onblur="Validate" /></td>
                    <td><span class="validation-error">@QueueNameValidationErrorMessage</span></td>
                </tr>
                <tr>
                    <td><label for="mq-keyname">Key Name (Policy):</label></td>
                    <td><input type="text" id="mq-keyname" placeholder="@ConnectionSettings.Default.KeyName" size="50" @bind="KeyName" @onblur="Validate" /></td>
                    <td><span class="validation-error">@KeyNameValidationErrorMessage</span></td>
                </tr>
                <tr>
                    <td><label for="mq-key">Key:</label></td>
                    <td><input type="password" id="mq-key" placeholder="@ConnectionSettings.Default.Key" size="50" @bind="Key" @onblur="Validate" /></td>
                    <td><span class="validation-error">@KeyValidationErrorMessage</span></td>
                </tr>
            </table>
            <button class="btn btn-primary" @onclick="Save" disabled="@(!FormIsValid)">Save</button>
            <button class="btn btn-light" @onclick="CancelAzureDevOps">Cancel</button>
            <div class="help-section">
                <p class="help-header">Instructions</p>
                <p>An Azure Service Bus is only required if daily activity time sheet information will be imported into a third party system.
                    If a custom program does not exist to read this queue, then this integration should be disabled.
                </p>
                <p>If the owner of the import program hasn't already do this for you, create an Azure Service Bus Namespace and Queue.
                    See <a href="https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-dotnet-get-started-with-queues?tabs=passwordless#create-a-namespace-in-the-azure-portal">
                        Azure documentation</a> for details on how to create an Azure Service Bus namespace and queue.
                    Use a connection string with the "Send" permission to write to the queue.
                </p>
                <ol>
                    <li>
                        Create a new "Service Bus" resource
                        <ol type="a">
                            <li>Choose a Subscription and Resource Group</li>
                            <li>Choose a unique Namespace name.  This will be the public URL for the service bus.  e.g. "https://myNamespace.servicebus.windows.net")</li>
                            <li>Choose a Location close to you</li>
                            <li>Choose a pricing tier.  The Basic tier is sufficient for most use cases.</li>
                        </ol>
                    </li>
                    <li>
                        Create a new "Queue"
                        <ol type="a">
                            <li>On the Azure Service Bus Namespace portal page created in the previous step, navigate on the tree to Entities » Queues</li>
                            <li>Click the "+ Queue" button to Add a queue</li>
                            <li>Enter the Queue Name.  This is recommended to be your username.</li>
                            <li>The defaults for other settings should be sufficient.</li>
                        </ol>
                    </li>
                    <li>
                        Create an Access Policy for the queue
                        <ol type="a">
                            <li>On the queue portal page, navigate on the tree to Settings » Shared access policies</li>
                            <li>Click the "+ Add" button to Add a policy</li>
                            <li>Enter the Policy Name (aka Key Name).  This is recommended to be "Send"</li>
                            <li>Click the Send claim check box to grant this to the policy.</li>
                            <li>The custom program that listens to this queue will need its own policy.  It is recommended that a new policy is created for that purpose (Least Privilege Principle)</li>
                            <li>View the Primary Key value assigned by Azure.  That will be needed for the "Key" value above</li>
                        </ol>
                    </li>
                </ol>
                <p class="help-header">Write Access</p>
                <p>The Daily Stand-Up page can send daily activity messages to Azure Service Bus.  
                    The Service Bus and Queue must be created in the Azure Portal (or from the CLI).  
                    The queue is written to, then Satori marks the Kimai time entry record as exported.  
                    If this integration is enabled and the queue cannot be written to, the Kimai time entry record will not be marked as Exported.</p>
            </div>
        </div>
    </div>
</div>


