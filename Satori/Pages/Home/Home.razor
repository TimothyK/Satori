@page "/"
@using Flurl
@using Satori.AppServices.Models
@using Satori.AppServices.Services
@using Satori.Pages.Home.Components
@using KimaiSettings = Satori.Pages.Home.Components.KimaiSettings
@using MessageQueueSettings = Satori.Pages.Home.Components.MessageQueueSettings
@inject IConnectionSettingsStore ConnectionSettingsStore
@inject UserService UserService
@inject NavigationManager NavigationManager

<PageTitle>Satori</PageTitle>

<h1>Welcome to Satori</h1>
<div style="display: flex;">

    <div>
        <p style="text-align: center;">
            <img src="images/Satori.png" alt="Satori" class="img-fluid" style="width: 100px; height: 214px;" />
        </p>
    </div>
    <div style="display: flex; justify-content: center; align-items: center; width: 600px; margin-left: 50px;">
        <p>
            Satori is web application that provides comprehension and understanding to the existing systems you already are using.
            These include issue tracking, project management, time tracking, and other systems.
            Unified dashboards pull information from multiple systems and merging them into a consistent view.
        </p>

    </div>
</div>

<h3>Integrations</h3>

<div class="card-stack">
    <div class="card">
        <div class="card-body">
            <a href="@_azureDevOpsUrl" target="_blank">
                <img src="images/AzureDevOps-Logo.png" alt="Azure DevOps Logo" />
                <p class="card-text">Azure DevOps</p>
            </a>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" @onclick="ShowAzureDevOpsSettings">@(_azureDevOpsEnabled ? "Edit" : "Add")</button>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <a href="@_kimaiUrl" target="_blank">
                <img src="images/kimai.png" alt="Kimai Logo" />
                <p class="card-text">Kimai</p>
            </a>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" @onclick="ShowKimaiSettings">@(_kimaiEnabled ? "Edit" : "Add")</button>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <a href="@_messageQueueUrl" target="_blank">
                <img src="images/AzureServiceBus.png" alt="Azure Service Bus Logo" />
                <p class="card-text">Azure Service Bus</p>
            </a>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" @onclick="ShowMessageQueueSettings">@(_messageQueueEnabled ? "Edit" : "Add")</button>
        </div>
    </div>

</div>

<AzureDevOpsSettings @ref="_azureDevOpsSettings" OnSettingsChanged="ReloadPage" />
<KimaiSettings @ref="_kimaiSettings" OnSettingsChanged="ReloadPage" />
<MessageQueueSettings @ref="_messageQueueSettings" OnSettingsChanged="ReloadPage" />

<h5>Privacy Policy</h5>
<div class="privacy-policy">
    <p>
        This web application does not store any data whatsoever on any server.
    </p>
    <p>
        The access keys to gain access to Azure DevOps, Kimai, or any other integrated service are stored locally in your web browser.
        Those keys are never captured to any other server.
        Sensitive data (passwords) are munged to make it unreadable, but it is not technically encrypted.  
        Do not use this application on a shared computer and/or clear cookies and local storage after use.
    </p>
    <p>
        No data pulled from Azure Devops (work items & pull requests), Kimai (timesheets), or any other integrated service are shared or stored on any external service.
        This data is merely displayed in your web browser.
    </p>
</div>

<h5>Contributions</h5>
<ul>
    <li><a target="_blank" href="https://github.com/TimothyK/Satori">Source Code</a></li>
    <li>by <a target="_blank" href="http://codemonkeyprojectiles.com">Timothy Klenke</a></li>
</ul>

@code
{
    private bool _azureDevOpsEnabled;
    private bool _kimaiEnabled;
    private bool _messageQueueEnabled;
    private Uri? _azureDevOpsUrl;
    private Uri? _kimaiUrl;
    private Uri? _messageQueueUrl;
    private AzureDevOpsSettings? _azureDevOpsSettings;
    private KimaiSettings? _kimaiSettings;
    private MessageQueueSettings? _messageQueueSettings;

    protected override async Task OnInitializedAsync()
    {
        LoadAzureDevOpsSettings();
        await LoadKimaiSettingsAsync();
        LoadMessageQueueSettings();
    }

    private void ShowAzureDevOpsSettings()
    {
        _azureDevOpsSettings?.Show();
    }

    private void LoadAzureDevOpsSettings()
    {
        var settings = ConnectionSettingsStore.GetAzureDevOpsSettings();
        _azureDevOpsEnabled = settings.Enabled;
        _azureDevOpsUrl = settings.Url;
    }

    private void ShowKimaiSettings()
    {
        _kimaiSettings?.Show();
    }

    private async Task LoadKimaiSettingsAsync()
    {
        var person = await UserService.GetCurrentUserAsync();
        var settings = ConnectionSettingsStore.GetKimaiSettings();
        _kimaiEnabled = settings.Enabled;
        _kimaiUrl = settings.Url
            .AppendPathSegment(person.Language.Replace("-", "_"))
            .AppendPathSegment("timesheet")
            .ToUri();
    }

    private void ShowMessageQueueSettings()
    {
        _messageQueueSettings?.Show();
    }

    private void LoadMessageQueueSettings()
    {
        var settings = ConnectionSettingsStore.GetMessageQueueSettings();
        _messageQueueEnabled = settings.Enabled;
        _messageQueueUrl = new Uri("https://portal.azure.com/");
    }

    private void ReloadPage()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

}
